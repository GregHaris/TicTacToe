*,
*::after,
::before {
  box-sizing: border-box;
}

:root {
  --cell-size: 10em;
  --mark-size: calc(var(--cell-size) * 0.9);
  --secondary-clr: rgb(96, 86, 86);
  --primary-clr: aliceblue;
  --primary-bg: rgb(73, 46, 3);
}

h1 {
  font-size: 6rem;
  text-align: center;
  margin: 0;
  padding: 0;
}

body {
  margin: 0;
  padding: 1em;
  font-family: cursive, system-ui,sans-serif;
  color: var(--secondary-clr);
  width: 100vw;
}

input, button {
  font-family: inherit;
  color: inherit;
  border-radius: 5rem;
  border: 2px solid;
  border-color: rgb(160, 160, 128);
}

.gameBoard-container {
  display: grid;
  place-content: center;
  width: 100%;
  height: 80vh;
}

.gameBoard {
  margin: 0 auto;
  width: 31em;
  height: 31em;
  display: none;
  place-content: center;
  place-items: center;
  grid-template-columns: repeat(3, auto);
  box-shadow: rgba(73, 46, 3, 0.25) 0px 50px 100px -20px,rgba(73, 46, 3, 0.3) 0px 30px 60px -30px, rgba(73, 46, 3, 0.35) 0px -2px 6px 0px inset;
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  cursor: pointer;
}

.cell {
  background: var(--primary-bg);
}

.cell:nth-child(2n) {
 background: rgb(203, 189, 158);
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
  border-bottom: none;
}

.cell.x,
.cell.circle {
  cursor: not-allowed;
}

.gameBoard.x .cell:not(.x):not(.circle):hover::after,
.gameBoard.x .cell:not(.x):not(.circle):hover::before,
.gameBoard.circle .cell:not(.x):not(.circle):hover::before {
  background-color: lightgrey;
}

.cell.x::after,
.cell.x::before{
background-color: bisque;
}


.cell.circle::before {
  background: rgb(73, 59, 59);
}

.cell.x::after,
.cell.x::before,
.gameBoard.x .cell:not(.x):not(.circle):hover::after,
.gameBoard.x .cell:not(.x):not(.circle):hover::before {
  content: "";
  width: calc(var(--mark-size) * 0.15);
  height: var(--mark-size);
  position: absolute;
}

.cell.x::before,
.gameBoard.x .cell:not(.x):not(.circle):hover::before {
  transform: rotate(45deg);
}

.cell.x::after,
.gameBoard.x .cell:not(.x):not(.circle):hover::after {
  transform: rotate(-45deg);
}

.cell.circle::after,
.cell.circle::before,
.gameBoard.circle .cell:not(.x):not(.circle):hover::after,
.gameBoard.circle .cell:not(.x):not(.circle):hover::before {
  content: "";
  border-radius: 50%;
  position: absolute;
}

.cell.circle::before,
.gameBoard.circle .cell:not(.x):not(.circle):hover::before {
  width: var(--mark-size);
  height: var(--mark-size);
}

.cell.circle::after,
.gameBoard.circle .cell:not(.x):not(.circle):hover::after {
  width: calc(var(--mark-size) * 0.7);
  height: calc(var(--mark-size) * 0.7);
  background-color: var(--primary-clr);
}

.winning-message {
  display: none;
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.9);
  justify-content: center;
  align-items: center;
  color: var(--primary-clr);
  font-size: 5rem;
  flex-direction: column;
}

.winning-message button {
  font-size: 3rem;
  color: var(--secondary-clr);
  background-color: var(--primary-clr);
  border: 1px solid black;
  padding: .25em .5em;
  cursor: pointer;
}

.winning-message button:hover {
  background: black;
  border-color: var(--primary-clr);
  color: var(--primary-clr);
}

.winning-message.show {
  display: flex;
}

.setup {
  display: flex;
  flex-direction: column;
  gap: 3em;
  height: 80vh;
  justify-content: center;
}

.setup div {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.setup label {
  display: block;
  text-align: center;
  font-size: 1.5rem;
  margin-bottom: 0.5rem;
  font-weight: 700;
}

.setup input {
  font-size: 1.3rem;
  padding: 0.5rem;
  margin-bottom: 1rem;
  width: 300px;
  text-align: center;
  outline: none;
}

.setup button {
  font-size: 1.5rem;
  padding: 0.5rem 1rem;
  cursor: pointer;
  color: var(--primary-clr);
  background-color: rgb(71, 69, 66);
  border: none;
}